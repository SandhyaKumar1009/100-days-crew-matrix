840. Magic Squares In Grid

class Solution(object):
    def numMagicSquaresInside(self, grid):
        def isMagic(r, c):
            s = {grid[r+i][c+j] for i in range(3) for j in range(3)}
            if s != {1, 2, 3, 4, 5, 6, 7, 8, 9}:
                return False

            if (grid[r][c] + grid[r][c+1] + grid[r][c+2] == 15 and
                grid[r+1][c] + grid[r+1][c+1] + grid[r+1][c+2] == 15 and
                grid[r+2][c] + grid[r+2][c+1] + grid[r+2][c+2] == 15 and
                grid[r][c] + grid[r+1][c] + grid[r+2][c] == 15 and
                grid[r][c+1] + grid[r+1][c+1] + grid[r+2][c+1] == 15 and
                grid[r][c+2] + grid[r+1][c+2] + grid[r+2][c+2] == 15 and
                grid[r][c] + grid[r+1][c+1] + grid[r+2][c+2] == 15 and
                grid[r][c+2] + grid[r+1][c+1] + grid[r+2][c] == 15):
                return True
            
            return False

        rows, cols = len(grid), len(grid[0])
        count = 0

        for r in range(rows - 2):
            for c in range(cols - 2):
                if isMagic(r, c):
                    count += 1
        
        return count

solution = Solution()
grid1 = [[4,3,8,4],[9,5,1,9],[2,7,6,2]]
grid2 = [[8]]
print(solution.numMagicSquaresInside(grid1)) 
print(solution.numMagicSquaresInside(grid2))  
